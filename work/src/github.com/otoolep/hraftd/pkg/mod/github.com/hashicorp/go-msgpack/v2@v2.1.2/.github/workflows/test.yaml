name: Tests

on: [push, workflow_dispatch]

jobs:
  get-go-version:
    name: Determine Go toolchain version
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "{go-version}={$(cat .go-version)}" >> $GITHUB_OUTPUT

  fmtcheck:
    name: format check
    runs-on: ubuntu-latest
    needs: [get-go-version]
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: 'exit $(( $(gofmt -s -l . | wc -l) != 0 ))'

  test:
    name: codec test
    runs-on: ubuntu-latest
    needs: [get-go-version]
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: go test -v ./codec
      - run: go test -tags codecgen.exec -v ./codec